<launch>
    <!-- Optional setting for remote debugging -->
    <arg name="launch_prefix" default="" /> <!-- Set to "gdbserver localhost:10000" to enable -->
    <arg name="node_namespace" default="apriltag_ros_continuous_node" />
    <arg name="camera_frame" default="usb_cam" />
    <arg name="image_topic" default="image_raw" />

    <!-- Load configuration files -->
    <rosparam command="load" file="$(find apriltag_detection)/config/settings.yaml" ns="$(arg node_namespace)" />
    <rosparam command="load" file="$(find apriltag_detection)/config/tags.yaml" ns="$(arg node_namespace)" />

    <!-- Launch the continuous Apriltag ROS node with specific settings -->
    <node pkg="apriltag_ros" type="apriltag_ros_continuous_node" name="$(arg node_namespace)" clear_params="true" output="screen" launch-prefix="$(arg launch_prefix)">
        <!-- Map internal topic names to ROS network topic names -->
        <remap from="image_rect" to="synced_image" />
        <remap from="camera_info" to="synced_camera_info" />

        <param name="camera_frame" type="str" value="usb_cam" />
        <param name="publish_tag_detections_image" type="bool" value="true" />      <!-- Enable to visualize detections -->
    </node>

    <!-- Launch nodes for image synchronization and Apriltag detection -->
    <node pkg="apriltag_detection" type="synchronize.py" name="image_sync" output="screen" />
    <node pkg="apriltag_detection" type="apriltag.py" name="apriltag_detection" output="screen" />

    <!-- Define static transforms for the camera relative to base and map frames -->
    <node pkg="tf" type="static_transform_publisher" name="camera_to_base" args="0.03 0 0.1 0 0 0 base_link camera_link 100" />
    <node pkg="tf" type="static_transform_publisher" name="head_camera_to_map" args="0 0 0 0 0 0 map head_camera 100" />
</launch>
